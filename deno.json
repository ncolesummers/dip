{
  "$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json",
  "imports": {
    "@std/": "https://deno.land/std@0.208.0/",
    "@std/testing": "https://deno.land/std@0.208.0/testing/mod.ts",
    "@std/assert": "https://deno.land/std@0.208.0/assert/mod.ts",
    "@std/async": "https://deno.land/std@0.208.0/async/mod.ts",
    "@std/datetime": "https://deno.land/std@0.208.0/datetime/mod.ts",
    "@std/encoding": "https://deno.land/std@0.208.0/encoding/mod.ts",
    "@std/fmt": "https://deno.land/std@0.208.0/fmt/mod.ts",
    "@std/fs": "https://deno.land/std@0.208.0/fs/mod.ts",
    "@std/http": "https://deno.land/std@0.208.0/http/mod.ts",
    "@std/path": "https://deno.land/std@0.208.0/path/mod.ts",
    "@std/uuid": "https://deno.land/std@0.208.0/uuid/mod.ts",
    "@std/crypto": "https://deno.land/std@0.208.0/crypto/mod.ts",
    "@std/dotenv": "https://deno.land/std@0.208.0/dotenv/mod.ts",
    "@std/flags": "https://deno.land/std@0.208.0/flags/mod.ts",
    "@std/log": "https://deno.land/std@0.208.0/log/mod.ts",
    "hono": "npm:hono@^3.11.0",
    "hono/cors": "npm:hono@^3.11.0/middleware/cors",
    "hono/logger": "npm:hono@^3.11.0/middleware/logger",
    "zod": "npm:zod@^3.22.4",
    "cloudevents": "npm:cloudevents@^7.0.2",
    "kafkajs": "npm:kafkajs@^2.2.4",
    "redis": "npm:redis@^4.6.11",
    "postgres": "https://deno.land/x/postgres@v0.17.0/mod.ts",
    "nanoid": "npm:nanoid@^5.1.5",
    "@/": "./",
    "@shared/": "./shared/",
    "@events/": "./shared/events/",
    "@schemas/": "./shared/schemas/",
    "@services/": "./shared/services/",
    "@observability/": "./shared/observability/",
    "@utils/": "./shared/utils/",
    "@config/": "./config/",
    "@tests/": "./tests/"
  },
  "tasks": {
    "dev": "deno run --watch --allow-net --allow-env --allow-read --allow-write --allow-run ./scripts/dev.ts",
    "dev:ingestion": "deno run --watch --allow-net --allow-env --allow-read services/ingestion/main.ts",
    "dev:classifier": "deno run --watch --allow-net --allow-env --allow-read services/classifier/main.ts",
    "dev:routing": "deno run --watch --allow-net --allow-env --allow-read services/routing/main.ts",
    "dev:response": "deno run --watch --allow-net --allow-env --allow-read services/response/main.ts",
    "test": "deno test --allow-all --parallel",
    "test:unit": "deno test --allow-all tests/unit/",
    "test:integration": "deno test --allow-all tests/integration/",
    "test:evals": "deno test --allow-all tests/evals/",
    "bench": "deno bench --allow-all",
    "check": "deno check **/*.ts",
    "fmt": "deno fmt",
    "fmt:check": "deno fmt --check",
    "lint": "deno lint",
    "cache": "deno cache --reload **/*.ts",
    "compile:ingestion": "deno compile --allow-net --allow-env --allow-read --output=build/ingestion services/ingestion/main.ts",
    "generate:service": "deno run --allow-all scripts/generate-service.ts",
    "monitor:events": "deno run --allow-net --allow-env scripts/event-monitor.ts",
    "metrics:server": "deno run --allow-net shared/observability/metrics.ts"
  },
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true
  },
  "fmt": {
    "include": ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx", "**/*.json", "**/*.md"],
    "exclude": ["node_modules", "build", ".deno", "coverage"],
    "useTabs": false,
    "lineWidth": 100,
    "indentWidth": 2,
    "singleQuote": false,
    "proseWrap": "preserve"
  },
  "lint": {
    "include": ["**/*.ts", "**/*.tsx"],
    "exclude": ["node_modules", "build", ".deno", "coverage"],
    "rules": {
      "tags": ["recommended"],
      "include": [
        "no-unused-vars"
      ],
      "exclude": ["no-console", "no-explicit-any"]
    }
  },
  "test": {
    "include": ["tests/**/*.test.ts", "**/*.test.ts"],
    "exclude": ["node_modules", "build"]
  },
  "bench": {
    "include": ["tests/**/*.bench.ts", "**/*.bench.ts"],
    "exclude": ["node_modules", "build"]
  },
  "unstable": ["kv", "temporal", "cron", "broadcast-channel"],
  "lock": false,
  "nodeModulesDir": "none"
}
